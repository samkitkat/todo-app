.main {
    display: flex;
    flex-direction: column;
    align-items: center;
    padding-top: 6rem;
    min-height: 100vh;
  }
  
  .timer {
    padding: 0.5rem;
    width: 100%;
    display: flex;
    justify-content: center;
    font-size: 3.5rem;
    font-family: title;
    color: #A3B18A;
    -webkit-text-stroke: 2px #588157; 
    text-shadow: 2px 2px 0 #588157;
  }
  
  .button{
    width: 100%;
    display: flex;
    justify-content: right;
    padding: 1rem;
  }
  /* CSS button by Michael McMillan*/
  .button54 {
    font-family: "Open Sans", sans-serif;
    font-size: 14px;
    letter-spacing: 2px;
    text-decoration: none;
    text-transform: uppercase;
    color: #588157;
    background-color: #DAD7CD;
    cursor: pointer;
    border: 3px solid;
    padding: 0.25em 0.5em;
    box-shadow: 1px 1px 0px 0px, 2px 2px 0px 0px, 3px 3px 0px 0px, 4px 4px 0px 0px, 5px 5px 0px 0px;
    position: relative;
    user-select: none;
    -webkit-user-select: none;
    touch-action: manipulation;
  }
  
  .button54:active {
    box-shadow: 0px 0px 0px 0px;
    top: 5px;
    left: 5px;
  }
  
  @media (min-width: 768px) {
    .button54 {
      padding: 0.25em 0.75em;
    }
  }
  .description {
    display: flex;
    justify-content: center;
    font-size: 1rem;
    letter-spacing: 0.2rem;
    font-family: var(--font-mono);
    color: #588157;
  }

  .grid {
    display: grid;
    grid-template-columns: repeat(4, minmax(25%, auto));
    width: var(--max-width);
    max-width: 100%;
  }
  
  .card {
    padding: 1rem 2rem;
    margin-left: 1rem;
    width: 300px;
    border-radius: var(--border-radius);
    background: rgba(var(--card-rgb), 0);
    border: 1px solid rgba(var(--card-border-rgb), 0.2);
    transition: background 200ms, border 200ms;
  }
  
  .card span {
    display: inline-block;
    transition: transform 200ms;
  }
  
  .card h2 {
    font-weight: 600;
    margin-bottom: 0.7rem;
  }
  
  .card p {
    margin: 0;
    opacity: 0.6;
    font-size: 1rem;
    line-height: 1.5;
    max-width: 30ch;
  }
  
  .todos {
    padding-top: 1rem;
  }
  
  .form {
    display: flex;
    margin-bottom: 0.5rem;
    align-items: center;
  }
  
  .center {
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;
    padding: 4rem 0;
  }
  
  .center::before {
    background: var(--secondary-glow);
    border-radius: 50%;
    width: 480px;
    height: 360px;
    margin-left: -400px;
  }
  
  .center::after {
    background: var(--primary-glow);
    width: 240px;
    height: 180px;
    z-index: -1;
  }
  
  .center::before,
  .center::after {
    content: '';
    left: 50%;
    position: absolute;
    filter: blur(45px);
    transform: translateZ(0);
  }
  
  .logo {
    position: relative;
  }
  /* Enable hover only on non-touch devices */
  @media (hover: hover) and (pointer: fine) {
    .card:hover {
      background: rgba(var(--card-rgb), 0.1);
      border: 1px solid rgba(var(--card-border-rgb), 0.15);
    }
  
    .card:hover span {
      transform: translateX(4px);
    }
  }
  
  @media (prefers-reduced-motion) {
    .card:hover span {
      transform: none;
    }
  }
  
  /* Mobile */
  @media (max-width: 700px) {
    .content {
      padding: 4rem;
    }
  
    .grid {
      grid-template-columns: 1fr;
      margin-bottom: 120px;
      max-width: 320px;
      text-align: center;
    }
  
    .card {
      padding: 1rem 2.5rem;
    }
  
    .card h2 {
      margin-bottom: 0.5rem;
    }
  
    .center {
      padding: 8rem 0 6rem;
    }
  
    .center::before {
      transform: none;
      height: 300px;
    }
  
    .description {
      font-size: 0.8rem;
    }
    .timer {
      font-size: 3rem;
    }
  }
  
  /* Tablet and Smaller Desktop */
  @media (min-width: 701px) and (max-width: 1120px) {
    .grid {
      grid-template-columns: repeat(2, 50%);
    }
  }
  
  @media (prefers-color-scheme: dark) {
    .vercelLogo {
      filter: invert(1);
    }
  
    .logo {
      filter: invert(1) drop-shadow(0 0 0.3rem #ffffff70);
    }
  }
  
  @keyframes rotate {
    from {
      transform: rotate(360deg);
    }
    to {
      transform: rotate(0deg);
    }
  }